# -*- coding: utf-8 -*-
"""iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BnazOTLjkVZv1qLSZcgePEmrA3ABqnTS
"""

import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.cluster import KMeans

iris = sns.load_dataset('iris')

iris

iris_train =iris.iloc[:,:4]

columns = iris.columns[0:4]

kmeans=KMeans(n_clusters=3, max_iter=100)

kmeans.fit(iris_train)

prediction=kmeans.predict(iris_train)

iris['predicted'] = prediction

iris['predicted']

from sklearn import metrics

metrics.homogeneity_score(iris['species'], iris['predicted'])

metrics.completeness_score(iris['species'], iris['predicted'])

metrics.v_measure_score(iris['species'], iris['predicted'])

metrics.silhouette_score(iris_train, prediction, metric='euclidean')

from sklearn import datasets
import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import Dense

dataset = datasets.load_iris()

train = dataset.data

labels=dataset.target

labels=pd.get_dummies(labels)

network = Sequential()

network.add(Dense(16, activation='relu',input_dim=4))

model.add(Dropout(0.5))

network.add(Dense(16, activation='relu'))

model.add(Dropout(0.5))

network.add(Dense(3, activation='softmax'))

network.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

network.fit(train,labels,epochs=100,batch_size=5)

y_pred = network.predict(train)

y_pred = (y_pred>0.3)

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(labels.values.argmax(axis=1), y_pred.argmax(axis=1))

cm

train.shape

y_pred

